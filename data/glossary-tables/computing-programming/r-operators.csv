Operator,Type,Name,Description,Example
"`<-` or `=`","Assignment","Assignment","Assignment operator used to assign values to variables.","`x <- 5`"
"`!`","Logical","NOT","Used to negate a Boolean expression.","`!TRUE` returns `FALSE`"
"`&`","Logical","AND","Used to test multiple conditions.","`TRUE & FALSE` returns `FALSE`"
"`|`","Logical","OR","Used to test if at least one condition is TRUE.","`TRUE | FALSE` returns `TRUE`"
"`+`","Arithmetic","Addition","Adds the two numbers together.","`x + y`"
"`-`","Arithmetic","Subtraction","Subtracts the number on the right from the number on the left".","`x - y`"
"`*`","Arithmetic","Multiplication","Multiplies the two numbers together.","`x * y`"
"`/`","Arithmetic","Division","Divides the number on the left by the number on the right.","`x / y`"
"`^`","Arithmetic","Exponentiation","Raises the number on the left to the power on the right.","`x ^ y`"
"`%%`","Arithmetic","Modulus/Modulo","Divides the number on the left by the number on the right and returns the **remainder**".","`x %% y`"
"`%/%`","Arithmetic","Integer division","Divides the number on the left by the number on the right and returns the result rounded down to the nearest whole number.","`x %/% y`"
"`%in%`","Inclusion","Inclusion","Used to test if an element is contained in a vector or list. Returns `TRUE` if the element on the left is in the data structure on the right and `FALSE` otherwise.","`1 %in% c(1, 2, 3)` returns `TRUE`"
"`:`","Sequence","Sequence","Generates a **vector** of numbers between the number on the left of the `:` and the number on the right, inclusive of both numbers.","`1:5` returns `c(1, 2, 3, 4, 5)"
"`>`","Comparison","Greater than","Returns `TRUE` if the number on the left is larger than the number on the right, and `FALSE` otherwise.","`x > y`"
"`<`","Comparison","Less than","Returns `TRUE` if the number on the left is smaller than the number on the right, and `FALSE` otherwise.","`x < y`"
"`>=`","Comparison",Greater than or equal to","Returns `TRUE` if the number on the left is larger than or equal to the number on the right, and `FALSE` otherwise.","`x >= y`"
"`<=`","Comparison","Less than or equal to","Returns `TRUE` if the number on the left is smaller than or equal to the number on the right, and `FALSE` otherwise.","`x <= y`"
"`==`","Comparison","Equality","Used to test if two values are equal.","`x == y`"
"`!=`","Comparison","Inequality","Returns `TRUE` if the values on both sides are not equal, and `FALSE` otherwise.","`x != y`"
"`%>%` (from tidyverse)","Pipe","Pipe","Used to **chain** operations, improving code readability.","`data %>% filter(x > 5)`"