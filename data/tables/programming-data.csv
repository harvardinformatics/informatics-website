Term,Definition,Python example,R example
Literal,"A literal is a notation for representing a fixed value in code. For example, `5` is a literal for the integer 5, and `'hello'` is a literal for the string 'hello'.","`5` is a literal for the integer 5","`5` is a literal for the integer 5"
Variable,"The name of a piece of information stored into memory in a computer program. This name can be referred to later in the program and be used to access the information.","In `x = 5`, `x` is the variable","In `x <- 5`, `x` is the variable"
Data type,"The way data is encoded on the computer. Different operations can be performed on different data types.","integer, string","numeric, character"
Type casting,"The process of converting data from one **data type** to another. This is often necessary when performing operations on data of different types.","In Python, `str(5)` converts the integer `5` to the string `'5'`","In R, `as.character(5)` converts the integer `5` to the string `'5'`"
Boolean,"A universal data type that can only have one of two values, usually `TRUE` or `FALSE`. Booleans are often used in programming to make and evaluate complex logical statements.","`True` or `False`","`TRUE` or `FALSE`"
Data structure,"The way data is organized within a programming language. Different operations can be performed on different data structures. Many data structures are **iterable**","list, dictionary","vector, data.frame"
Class,"A defined way to construct **objects** that have particular data (**attributes**) or **methods** (**functions**) associated with them.","Most objects in Python are classes: string, list, dictionary","Most objects in R are classes: data.frame, matrix"
Attribute,"Data or properties attached to a particular **instance** of a **class**.","`car.make` accesses the `make` attribute of a `car` object","`attr(my_data_frame)` retrieves the **attributes** of the `my_data_frame` **object**"
Object,"An instance of a **class**. Colloquially, this term may be used to mean any piece of data (variable) in your program, whether it represents a class or not.","In Python, `my_list = [1, 2, 3]` creates an object of the class `list`","In R, `my_vec <- c(1, 2, 3)` creates an object of the class `numeric`"
Instance,"A specific occurrence of an **object** within a **class**.","In Python, `my_list = [1, 2, 3]` creates an instance of the `list` class","In R, `my_vec <- c(1, 2, 3)` creates an instance of the `numeric` class"
Immutable,"An **object** whose state cannot be modified after it is created.","string, tuple","Most objects in R are mutable"
Iterable,"An **object** that consists of a sequence of other objects and that can be looped over usually with a `for` loop.","string, list, dictionary","vector, list"
Element,"A single piece of data within a **data structure**. Most commonly used in the context of **iterable** data structures.","In `my_list = [1, 2, 3]`, `1` is an element of the list","In `my_vec <- c(1, 2, 3)`, `1` is an element of the vector"
Index,"A number that represents the position of an **element** within an **iterable** data structure. In many programming languages, the first index of an iterable is `0`.","In `my_list = [1, 2, 3]`, `0` is the index of `1`","In `my_vec <- c(1, 2, 3)`, `1` is the element at index `1`"
Indexing,"The process of selecting a specific **element** from an **iterable** data structure using its **index**.","In `my_list = [1, 2, 3]`, `my_list[0]` returns `1`","In `my_vec <- c(1, 2, 3)`, `my_vec[1]` returns `1`"
Slicing,"The process of selecting a subset of **elements** from an **iterable** data structure using their **indices**.","In `my_list = [1, 2, 3]`, `my_list[0:2]` returns `[1, 2]`","In `my_vec <- c(1, 4, 5)`, `my_vec[2:3]` returns `[4, 5]`"
Splicing,"The process of removing or inserting elements from or into an **iterable** data structure, often altering its size and content.","In `my_list = [1, 2, 3]`, `my_list[1:2] = [4, 5]` changes `my_list` to `[1, 4, 5, 3]`","No built-in splicing method, objects must be manipulated via indexing."
