Data Structure,Description,Example,Mutability,Iterability,Element Access
"Vector","An ordered collection of elements of the same type, created using `c()`. If given mixed types, the data will be coerced into a single type (*e.g.* by converting numerics to characters). Vectors inherit the type of the data they contain.","`c(1, 2, 3)`","Mutable in practice","Iterable","`vector[1]`"
"List","An ordered collection of elements that can contain different types.","`list(1, 'a', TRUE, c(1, 2, 3), list(x=10, y=20))`","Mutable","Iterable","`list[[1]]` accesses the first element by index, returning its value directly; `list[1]` accesses the first element by index and returns it as a sublist; `list$name` accesses an element by name."
"Matrix","A 2-D collection of elements of the same type, created using `matrix()`.","`matrix(1:4, nrow=2)`","Mutable","Iterable","`matrix[<row number>, <column number>]`"
"Data Frame","A table-like structure with equal-length vectors of possibly different types.","`data.frame(a=1:3, b=c('A', 'B', 'C'))`","Mutable","Iterable","`dataframe$<column name>` or `dataframe[<row number>, '<column name>']` or `dataframe[<row number>, <column number>]`"
"Factor","A data structure used to categorize data, with a fixed number of possible values called **levels**. Factors are created using the `factor()` function.","`factor(c('low', 'medium', 'high'))`","Immutable in terms of levels","Not Iterable","`factor[1]` accesses the firest level of the factor by index"
"Level","A distinct value within a factor.","`'low'`, `'medium'`, `'high'`","Immutable","Not Iterable","`factor[1]` accesses the first level of the factor by index"
"Tibble (from tidyverse)","A modern version of **data frames** with enhanced print method and better support for large datasets.","`tibble(a = 1:3, b = c('A', 'B', 'C'))`","Mutable","Iterable","`tibble$<column name>` or `tibble[<row number>, '<column name>']` or `tibble[<row number>, <column number>]`"
"Array","A multi-dimensional generalization of matrices.","`array(1:8, dim=c(2,2,2))`","Mutable","Iterable","`array[1, 1, 2]`"