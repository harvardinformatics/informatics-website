Operator,Type,Strings,Integers/floats,Boolean
"`=`","Assignment","Assigns a string to a variable name","Assigns a number to a variable name","Assigns a boolean to a variable name"
"`+`","Arithmetic","Concatenate (combine) strings","Add two numbers","*NA*"
"`+=`","Update*","Concatenate and assign","Add and assign","*NA*"
"`-`","Arithmetic","*NA*","Subtract two numbers","*NA*"
"`-=`","Update*","*NA*","Subtract and assign","*NA*"
"`*`","Arithmetic","Repeat a string N times, where N is an integer","Multiply two numbers","*NA*"
"`*=`","Update*","Repeat a string N times and assign, where N is an integer","Multiply and assign","*NA*"
"`/`","Arithmetic","*NA*","Divide two numbers, returning a decimal","*NA*"
"`/=`","Update*","*NA*","Divide and assign","*NA*"
"`**`","Arithmetic","*NA*","Exponentiation (raise to the power of)","*NA*"
"`**=`","Update*","*NA*","Exponentiation and assign","*NA*"
"`//`","Arithmetic","*NA*","Divide two numbers, rounding down to return an integer","*NA*"
"`//=`","Update*","*NA*","Divide and assign, rounding down to return an integer","*NA*"
"`%`","Arithmetic","*NA*","Modulus: divide two numbers, returning the remainder as an integer","*NA*"
"`%=`","Update*","*NA*","Modulus and assign","*NA*"
"`in`","Inclusion","Checks if one string is contained in another, returning a boolean","*NA*","*NA*"
"`and`","Logical","*NA*","*NA*","Returns `True` if both conditions are `True`, otherwise `False`"
"`or`","Logical","*NA*","*NA*","Returns `True` if at least one condition is `True`, otherwise `False`"
"`not`","Logical","*NA*","*NA*","Negates a boolean (e.g. returns `True` if `False` is input and vice versa)"
"`==`","Comparison","Compares 2 strings and returns `True` if they are identical, `False` otherwise","Compares two numbers and returns `True` if they are identical, `False` otherwise","Compares two booleans and returns `True` if they are identical, `False` otherwise"
"`!=`","Comparison","Returns `True` if two strings are **not** identical, `False` otherwise","Returns `True` if two numbers are **not** identical, `False` otherwise","Returns `True` if two booleans are **not** identical, `False` otherwise"
"`<`","Comparison","*NA*","Returns `True` if the first number is less than the second, `False` otherwise","Essentially treats `True` as 1 and `False` as 0, then compares the two numbers"
"`<=`","Comparison","*NA*","Returns `True` if the first number is less than or equal to the second, `False` otherwise","Essentially treats `True` as 1 and `False` as 0, then compares the two numbers"
"`>`","Comparison","*NA*","Returns `True` if the first number is greater than the second, `False` otherwise","Essentially treats `True` as 1 and `False` as 0, then compares the two numbers"
"`>=`","Comparison","*NA*","Returns `True` if the first number is greater than or equal to the second, `False` otherwise","Essentially treats `True` as 1 and `False` as 0, then compares the two numbers"
