# Build site for commits pushed to all branches
# Deploy only if on default branch
on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9.x' # same as macOS
          cache: pip
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Build site
        run: mkdocs build
      - name: Upload site/
        uses: actions/upload-pages-artifact@v2
        with:
          path: site

  link-checker:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # https://github.com/ruby/setup-ruby#dealing-with-a-corrupted-cache
      - name: install htmlproofer
        run: gem install html-proofer -v 5.0.8
      # Cache HTMLProofer external URL results for 30 days
      # https://github.com/gjtorikian/html-proofer/#caching-with-continuous-integration
      - uses: actions/cache/restore@v3
        id: restore-cache-htmlproofer
        with:
          path: tmp/.htmlproofer
          key: ${{ runner.os }}-html-proofer
      - name: Download site
        uses: actions/download-artifact@v3
        with:
          name: github-pages
      - run: tar -xf artifact.tar && rm artifact.tar
      - name: run htmlproofer
        # keep --swap-urls in sync with mkdocs.yml site_url
        run: |
          htmlproofer --ignore-missing-alt --cache '{"timeframe": {"external": "30d"}}' --ignore-files ./404.html
      # https://github.com/actions/cache/blob/main/save/README.md#always-save-cache
      - uses: actions/cache/save@v3
        id: save-cache-htmlproofer
        if: always()
        with:
          path: tmp/.htmlproofer
          key: ${{ runner.os }}-html-proofer

  deploy:
    if: github.ref == format('refs/heads/{0}', github.event.repository.default_branch)
    runs-on: ubuntu-latest
    needs: build
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
