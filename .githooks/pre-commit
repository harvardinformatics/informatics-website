#!/bin/sh
# .githooks/pre-commit

echo "[HOOK] pre-commit: Re-commenting development-only ignore lines in mkdocs.yml"

FILE="mkdocs.yml"
TEMP_FILE="$(mktemp)"

if [ ! -f "$FILE" ]; then
  echo "Warning: mkdocs.yml not found"
  exit 0
fi

MODIFIED=0
while IFS= read -r LINE; do
  # Re-comment dev ignore line for .ipynb
  # if printf '%s\n' "$LINE" | grep -qE '^[[:space:]]*-[[:space:]]*'\''\*\.ipynb'\'''; then
  #   if printf '%s\n' "$LINE" | grep -vq '^[[:space:]]*#'; then
  #     INDENT=$(printf "%s" "$LINE" | sed -E 's/^([ ]*).*/\1/')
  #     BODY=$(printf "%s" "$LINE" | sed -E 's/^\s*-\s*(.*)$/- \1/')
  #     echo "${INDENT}# ${BODY}" >> "$TEMP_FILE"
  #     MODIFIED=1
  #     continue
  #   fi
  # fi

  # Re-comment dev verbose-in-macros line if not already commented
  if printf '%s\n' "$LINE" | grep -q 'verbose: true # MACRO DEBUG:'; then
    if printf '%s\n' "$LINE" | grep -vq '^[[:space:]]*#'; then
      INDENT=$(printf "%s" "$LINE" | sed -E 's/^([ ]*).*/\1/')
      BODY=$(printf "%s" "$LINE" | sed -E 's/^\s*(.*)$/\1/')
      echo "${INDENT}# ${BODY}" >> "$TEMP_FILE"
      MODIFIED=1
      continue
    fi
  fi

  # Re-comment dev social plugin line if not already commented
  if printf '%s\n' "$LINE" | grep -q 'enabled: false # SOCIAL PLUGIN:'; then
    if printf '%s\n' "$LINE" | grep -vq '^[[:space:]]*#'; then
      INDENT=$(printf "%s" "$LINE" | sed -E 's/^([ ]*).*/\1/')
      BODY=$(printf "%s" "$LINE" | sed -E 's/^\s*(.*)$/\1/')
      echo "${INDENT}# ${BODY}" >> "$TEMP_FILE"
      MODIFIED=1
      continue
    fi
  fi

  # Default: just write the line unchanged
  echo "$LINE" >> "$TEMP_FILE"
done < "$FILE"

if [ "$MODIFIED" -eq 1 ]; then
  echo "Detected uncommented development-only lines in mkdocs.yml."
  echo "Re-commented them for commit."
  mv "$TEMP_FILE" "$FILE"
  git add "$FILE"
else
  rm "$TEMP_FILE"
fi

exit 0